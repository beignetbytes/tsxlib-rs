language: rust
rust:
  - stable
  - beta
  - nightly

script:
  - rustup component add clippy
  - if [ "$TRAVIS_RUST_VERSION" == "nightly" ]; then
        cargo build --release --features --features "parq" ;
        cargo test --features "parq" ;
        cargo clippy -p tsxlib --features "parq" ;
    fi
  - cargo build --release
  - cargo build --release --features "json"
  - cargo test
  - cargo clippy -p tsxlib --features "json"

env:
  global:
    - RUST_BACKTRACE=1

addons:
  apt:
    packages:
      - libcurl4-openssl-dev
      - libelf-dev
      - libdw-dev
      - cmake
      - gcc
      - binutils-dev
      - libiberty-dev

after_success: |
  wget https://github.com/binarybytes11/tsxlib-rs/archive/main.tar.gz &&
  tar xzf main.tar.gz &&
  cd tsxlib-rs-main &&
  mkdir build &&
  cd build &&
  cmake .. &&
  make &&
  make install DESTDIR=../../tsxlib-rs-build &&
  cd ../.. &&
  rm -rf tsxlib-rs-main &&
  for file in target/debug/tsxlib-rs-*; do [ -x "${file}" ] || continue; mkdir -p "target/cov/$(basename $file)"; ./kcov-build/usr/local/bin/kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"; done &&
  bash <(curl -s https://codecov.io/bash) &&
  echo "Uploaded code coverage"
